/* TDK ICM 20649 3 axis gyro and accelerometer */
/*
 * Copyright (c) 2018 LeanUp LLC
 *
 * SPDX-License-Identifier: Apache-2.0
 */

#ifndef __SENSOR_ICM20649_H__
#define __SENSOR_ICM20649_H__

#include <sensor.h>
#include <zephyr/types.h>
#include <gpio.h>
#include <misc/util.h>

/* Common Register Bank Select Register */
#define ICM20649_REG_BANK_SEL							0x7F
#define ICM20649_SHIFT_BANK_SEL							4
#define ICM20649_MASK_BANK_SEL							(BIT(5) | BIT(4))

/* Bank 0 Registers */

#define ICM20649_REG_WHO_AM_I							0x00
#define ICM20649_VAL_WHO_AM_I							0xE1

#define ICM20649_REG_USER_CTRL							0x03
#define ICM20649_SHIFT_USER_CTRL_DMP_EN					7
#define ICM20649_MASK_USER_CTRL_DMP_EN					BIT(7)
#define ICM20649_SHIFT_USER_CTRL_FIFO_EN				6
#define ICM20649_MASK_USER_CTRL_FIFO_EN					BIT(6)
#define ICM20649_SHIFT_USER_CTRL_I2C_MST_EN				5
#define ICM20649_MASK_USER_CTRL_I2C_MST_EN				BIT(5)
#define ICM20649_SHIFT_USER_CTRL_I2C_IF_DIS				4
#define ICM20649_MASK_USER_CTRL_I2C_IF_DIS				BIT(4)
#define ICM20649_SHIFT_USER_CTRL_DMP_RST				3
#define ICM20649_MASK_USER_CTRL_DMP_RST					BIT(3)
#define ICM20649_SHIFT_USER_CTRL_SRAM_RST				2
#define ICM20649_MASK_USER_CTRL_SRAM_RST				BIT(2)
#define ICM20649_SHIFT_USER_CTRL_I2C_MST_RST			1
#define ICM20649_MASK_USER_CTRL_I2C_MST_RST				BIT(1)

#define ICM20649_REG_LP_CONFIG							0x05
#define ICM20649_SHIFT_LP_CONFIG_I2C_MST_CYCLE			6
#define ICM20649_MASK_LP_CONFIG_I2C_MST_CYCLE			BIT(6)
#define ICM20649_SHIFT_LP_CONFIG_ACCEL_CYCLE			5
#define ICM20649_MASK_LP_CONFIG_ACCEL_CYCLE				BIT(5)
#define ICM20649_SHIFT_LP_CONFIG_GYRO_CYCLE				4
#define ICM20649_MASK_LP_CONFIG_GYRO_CYCLE				BIT(4)

#define ICM20649_REG_PWR_MGMT_1							0x06
#define ICM20649_SHIFT_PWR_MGMT_1_DEVICE_RESET			7
#define ICM20649_MASK_PWR_MGMT_1_DEVICE_RESET			BIT(7)
#define ICM20649_SHIFT_PWR_MGMT_1_SLEEP					6
#define ICM20649_MASK_PWR_MGMT_1_SLEEP					BIT(6)
#define ICM20649_SHIFT_PWR_MGMT_1_LP_EN					5
#define ICM20649_MASK_PWR_MGMT_1_LP_EN					BIT(5)
#define ICM20649_SHIFT_PWR_MGMT_1_TEMP_DIS				3
#define ICM20649_MASK_PWR_MGMT_1_TEMP_DIS				BIT(3)
#define ICM20649_SHIFT_PWR_MGMT_1_CLKSEL				0
#define ICM20649_MASK_PWR_MGMT_1_CLKSEL					(BIT(2) | BIT(1) | BIT(0))

#define ICM20649_REG_PWR_MGMT_2							0x07
#define ICM20649_SHIFT_PWR_MGMT_2_DISABLE_ACCEL			3
#define ICM20649_MASK_PWR_MGMT_2_DISABLE_ACCEL			(BIT(5) | BIT(4) | BIT(3))
#define ICM20649_SHIFT_PWR_MGMT_2_DISABLE_GYRO			0
#define ICM20649_MASK_PWR_MGMT_2_DISABLE_GYRO			(BIT(2) | BIT(1) | BIT(0))

#define ICM20649_REG_INT_PIN_CFG						0x0F
#define ICM20649_SHIFT_INT_PIN_CFG_INT1_ACTL			7
#define ICM20649_MASK_INT_PIN_CFG_INT1_ACTL				BIT(7)
#define ICM20649_SHIFT_INT_PIN_CFG_INT1_OPEN			6
#define ICM20649_MASK_INT_PIN_CFG_INT1_OPEN				BIT(6)
#define ICM20649_SHIFT_INT_PIN_CFG_INT1_LATCH_EN	5
#define ICM20649_MASK_INT_PIN_CFG_INT1_LATCH_EN		BIT(5)
#define ICM20649_SHIFT_INT_PIN_CFG_INT1_ANYRD_2CLEAR	4
#define ICM20649_MASK_INT_PIN_CFG_INT1_ANYRD_2CLEAR		BIT(4)
#define ICM20649_SHIFT_INT_PIN_CFG_ACTL_FSYNC			3
#define ICM20649_MASK_INT_PIN_CFG_ACTL_FSYNC			BIT(3)
#define ICM20649_SHIFT_INT_PIN_CFG_FSYNC_INT_MODE_EN	2
#define ICM20649_MASK_INT_PIN_CFG_FSYNC_INT_MODE_EN		BIT(2)
#define ICM20649_SHIFT_INT_PIN_CFG_BYPASS_EN			1
#define ICM20649_MASK_INT_PIN_CFG_BYPASS_EN				BIT(1)

#define ICM20649_REG_INT_ENABLE							0x10
#define ICM20649_SHIFT_INT_ENABLE_REG_WOF_EN			7
#define ICM20649_MASK_INT_ENABLE_REG_WOF_EN				BIT(7)
#define ICM20649_SHIFT_INT_ENABLE_DMP_INT2_EN			4
#define ICM20649_MASK_INT_ENABLE_DMP_INT2_EN			BIT(4)
#define ICM20649_SHIFT_INT_ENABLE_WOM_INT_EN			3
#define ICM20649_MASK_INT_ENABLE_WOM_INT_EN				BIT(3)
#define ICM20649_SHIFT_INT_ENABLE_PLL_RDY_EN			2
#define ICM20649_MASK_INT_ENABLE_PLL_RDY_EN				BIT(2)
#define ICM20649_SHIFT_INT_ENABLE_DMP_INT1_EN			1
#define ICM20649_MASK_INT_ENABLE_DMP_INT1_EN			BIT(1)
#define ICM20649_SHIFT_INT_ENABLE_I2C_MST_INT_EN		0
#define ICM20649_MASK_INT_ENABLE_I2C_MST_INT_EN			BIT(0)

#define ICM20649_REG_INT_ENABLE_1						0x11
#define ICM20649_SHIFT_INT_ENABLE_1_INT2_ACTL			7
#define ICM20649_MASK_INT_ENABLE_1_INT2_ACTL			BIT(7)
#define ICM20649_SHIFT_INT_ENABLE_1_INT2_OPEN			6
#define ICM20649_MASK_INT_ENABLE_1_INT2_OPEN			BIT(6)
#define ICM20649_SHIFT_INT_ENABLE_1_INT2_LATCH_EN		5
#define ICM20649_MASK_INT_ENABLE_1_INT2_LATCH_EN		BIT(5)
#define ICM20649_SHIFT_INT_ENABLE_1_RAW_DATA_0_RDY_EN	0
#define ICM20649_MASK_INT_ENABLE_1_RAW_DATA_0_RDY_EN	BIT(0)

#define ICM20649_REG_INT_ENABLE_2						0x12
#define ICM20649_SHIFT_INT_ENABLE_2_FIFO_OVERFLOW_EN	0
#define ICM20649_MASK_INT_ENABLE_2_FIFO_OVERFLOW_EN		(BIT(4) | BIT(3) | BIT(2) | BIT(1) | BIT(0))

#define ICM20649_REG_INT_ENABLE_3						0x13
#define ICM20649_SHIFT_INT_ENABLE_3_FIFO_WM_EN			0
#define ICM20649_MASK_INT_ENABLE_3_FIFO_WM_EN			(BIT(4) | BIT(3) | BIT(2) | BIT(1) | BIT(0))

#define ICM20649_REG_I2C_MST_STATUS						0x17

#define ICM20649_REG_INT_STATUS							0x19
#define ICM20649_SHIFT_INT_STATUS_WOM_INT				3
#define ICM20649_MASK_INT_STATUS_WOM_INT				BIT(3)
#define ICM20649_SHIFT_INT_STATUS_PLL_RDY_INT			2
#define ICM20649_MASK_INT_STATUS_PLL_RDY_INT			BIT(2)
#define ICM20649_SHIFT_INT_STATUS_DMP_INT1				1
#define ICM20649_MASK_INT_STATUS_DMP_INT1				BIT(1)
#define ICM20649_SHIFT_INT_STATUS_I2C_MST_INT			0
#define ICM20649_MASK_INT_STATUS_I2C_MST_INT			BIT(0)

#define ICM20649_REG_INT_STATUS_1						0x1A
#define ICM20649_SHIFT_INT_STATUS_1_RAW_DATA_0_RDY_INT	0
#define ICM20649_MASK_INT_STATUS_1_RAW_DATA_0_RDY_INT	BIT(0)

#define ICM20649_REG_INT_STATUS_2						0x1B
#define ICM20649_SHIFT_INT_STATUS_2_FIFO_OVERFLOW_INT	0
#define ICM20649_MASK_INT_STATUS_2_FIFO_OVERFLOW_INT	(BIT(4) | BIT(3) | BIT(2) | BIT(1) | BIT(0))

#define ICM20649_REG_INT_STATUS_3						0x1C
#define ICM20649_SHIFT_INT_STATUS_3_FIFO_WM_INT			0
#define ICM20649_MASK_INT_STATUS_3_FIFO_WM_INT			(BIT(4) | BIT(3) | BIT(2) | BIT(1) | BIT(0))

#define ICM20649_REG_DELAY_TIMEH						0x28
#define ICM20649_REG_DELAY_TIMEL						0x29

#define ICM20649_REG_ACCEL_XOUT_H						0x2D
#define ICM20649_REG_ACCEL_XOUT_L						0x2E
#define ICM20649_REG_ACCEL_YOUT_H						0x2F
#define ICM20649_REG_ACCEL_YOUT_L						0x30
#define ICM20649_REG_ACCEL_ZOUT_H						0x31
#define ICM20649_REG_ACCEL_ZOUT_L						0x32

#define ICM20649_REG_GYRO_XOUT_H						0x33
#define ICM20649_REG_GYRO_XOUT_L						0x34
#define ICM20649_REG_GYRO_YOUT_H						0x35
#define ICM20649_REG_GYRO_YOUT_L						0x36
#define ICM20649_REG_GYRO_ZOUT_H						0x37
#define ICM20649_REG_GYRO_ZOUT_L						0x38

#define ICM20649_REG_TEMP_OUT_H							0x39
#define ICM20649_REG_TEMP_OUT_L							0x3A

#define ICM20649_REG_FIFO_EN_1							0x66
#define ICM20649_SHIFT_FIFO_EN_SLV_3_FIFO_EN			3
#define ICM20649_MASK_FIFO_EN_SLV_3_FIFO_EN				BIT(3)
#define ICM20649_SHIFT_FIFO_EN_SLV_2_FIFO_EN			2
#define ICM20649_MASK_FIFO_EN_SLV_2_FIFO_EN				BIT(2)
#define ICM20649_SHIFT_FIFO_EN_SLV_1_FIFO_EN			1
#define ICM20649_MASK_FIFO_EN_SLV_1_FIFO_EN				BIT(1)
#define ICM20649_SHIFT_FIFO_EN_SLV_0_FIFO_EN			0
#define ICM20649_MASK_FIFO_EN_SLV_0_FIFO_EN				BIT(0)

#define ICM20649_REG_FIFO_EN_2							0x67
#define ICM20649_SHIFT_FIFO_EN_2_ACCEL_FIFO_EN			4
#define ICM20649_MASK_FIFO_EN_2_ACCEL_FIFO_EN			BIT(4)
#define ICM20649_SHIFT_FIFO_EN_2_GYRO_Z_FIFO_EN			3
#define ICM20649_MASK_FIFO_EN_2_GYRO_Z_FIFO_EN			BIT(3)
#define ICM20649_SHIFT_FIFO_EN_2_GYRO_Y_FIFO_EN			2
#define ICM20649_MASK_FIFO_EN_2_GYRO_Y_FIFO_EN			BIT(2)
#define ICM20649_SHIFT_FIFO_EN_2_GYRO_X_FIFO_EN			1
#define ICM20649_MASK_FIFO_EN_2_GYRO_X_FIFO_EN			BIT(1)
#define ICM20649_SHIFT_FIFO_EN_2_TEMP_FIFO_EN			0
#define ICM20649_MASK_FIFO_EN_2_TEMP_FIFO_EN			BIT(0)

#define ICM20649_REG_FIFO_RST							0x68
#define ICM20649_SHIFT_FIFO_RST							0
#define ICM20649_MASK_FIFO_RST							(BIT(4) | BIT(3) | BIT(2) | BIT(1) | BIT(0))

#define ICM20649_REG_FIFO_MODE							0x69
#define ICM20649_SHIFT_FIFO_MODE						0
#define ICM20649_MASK_FIFO_MODE							(BIT(4) | BIT(3) | BIT(2) | BIT(1) | BIT(0))

#define ICM20649_FIFO_MODE_STREAM						0
#define ICM20649_FIFO_MODE_SNAPSHOT						1

#define ICM20649_REG_FIFO_COUNTH 						0x70
#define ICM20649_SHIFT_FIFO_COUNTH						0
#define ICM20649_MASK_FIFO_COUNTH 						(BIT(4) | BIT(3) | BIT(2) | BIT(1) | BIT(0))

#define ICM20649_REG_FIFO_COUNTL 						0x71
#define ICM20649_SHIFT_FIFO_COUNTL						0
#define ICM20649_MASK_FIFO_COUNTL 						0xFF

#define ICM20649_FIFO_SIZE ((4096*7)/8)

#define ICM20649_REG_FIFO_R_W 							0x72
#define ICM20649_SHIFT_FIFO_R_W							0
#define ICM20649_MASK_FIFO_R_W							0xFF

#define ICM20649_REG_DATA_RDY_STATUS					0x74
#define ICM20649_SHIFT_DATA_RDY_STATUS_WOF_STATUS		7
#define ICM20649_MASK_DATA_RDY_STATUS_WOF_STATUS		BIT(7)
#define ICM20649_SHIFT_DATA_RDY_STATUS_RAW_DATA_RDY		0
#define ICM20649_MASK_DATA_RDY_STATUS_RAW_DATA_RDY		(BIT(3) | BIT(2) | BIT(1) | BIT(0))

#define ICM20649_REG_FIFO_CFG							0x76
#define ICM20649_SHIFT_FIFO_CFG							0
#define ICM20649_MASK_FIFO_CFG							BIT(0)

/* User Bank 1 Registers */

#define ICM20649_REG_SELF_TEST_X_GYRO					0x02
#define ICM20649_REG_SELF_TEST_Y_GYRO					0x03
#define ICM20649_REG_SELF_TEST_Z_GYRO					0x04
#define ICM20649_REG_SELF_TEST_X_ACCEL					0x0E
#define ICM20649_REG_SELF_TEST_Y_ACCEL					0x0F
#define ICM20649_REG_SELF_TEST_Z_ACCEL					0x10

#define ICM20649_REG_XA_OFFS_H							0x14

#define ICM20649_REG_XA_OFFS_L							0x15
#define ICM20649_SHIFT_XA_OFFS_L						1
#define ICM20649_MASK_XA_OFFS_L							0xFE

#define ICM20649_REG_YA_OFFS_H							0x17

#define ICM20649_REG_YA_OFFS_L							0x18
#define ICM20649_SHIFT_YA_OFFS_L						1
#define ICM20649_MASK_YA_OFFS_L							0xFE

#define ICM20649_REG_ZA_OFFS_H							0x1A

#define ICM20649_REG_ZA_OFFS_L							0x1B
#define ICM20649_SHIFT_ZA_OFFS_L						1
#define ICM20649_MASK_ZA_OFFS_L							0xFE

#define ICM20649_REG_TIMEBASE_CORRECTION_PLL			0x28

/* User Bank 2 Registers */
#define ICM20649_REG_GYRO_SMPLRT_DIV					0x00

#define ICM20649_REG_GYRO_CONFIG_1						0x01
#define ICM20649_SHIFT_GYRO_CONFIG_1_GYRO_DLPFCFG		3
#define ICM20649_MASK_GYRO_CONFIG_1_GYRO_DLPFCFG		(BIT(5) | BIT(4) | BIT(3))
#define ICM20649_SHIFT_GYRO_CONFIG_1_GYRO_FS_SEL		1
#define ICM20649_MASK_GYRO_CONFIG_1_GYRO_FS_SEL 		(BIT(2) | BIT(1))
#define ICM20649_SHIFT_GYRO_CONFIG_1_GYRO_FCHOICE		0
#define ICM20649_MASK_GYRO_CONFIG_1_GYRO_FCHOICE		BIT(0)

#define ICM20649_REG_GYRO_CONFIG_2						0x02
#define ICM20649_SHIFT_GYRO_CONFIG_2_XGYRO_CTEN			5
#define ICM20649_MASK_GYRO_CONFIG_2_XGYRO_CTEN			BIT(5)
#define ICM20649_SHIFT_GYRO_CONFIG_2_YGYRO_CTEN			4
#define ICM20649_MASK_GYRO_CONFIG_2_YGYRO_CTEN			BIT(4)
#define ICM20649_SHIFT_GYRO_CONFIG_2_ZGYRO_CTEN			3
#define ICM20649_MASK_GYRO_CONFIG_2_ZGYRO_CTEN			BIT(3)
#define ICM20649_SHIFT_GYRO_CONFIG_2_GYRO_AVGCFG		0
#define ICM20649_MASK_GYRO_CONFIG_2_GYRO_AVGCFG 		(BIT(2) | BIT(1) | BIT(0))

#define ICM20649_REG_XG_OFFS_USRH						0x03
#define ICM20649_REG_XG_OFFS_USRL						0x04
#define ICM20649_REG_YG_OFFS_USRH						0x05
#define ICM20649_REG_YG_OFFS_USRL						0x06
#define ICM20649_REG_ZG_OFFS_USRH						0x07
#define ICM20649_REG_ZG_OFFS_USRL						0x08

#define ICM20649_REG_ODR_ALIGN_EN						0x09
#define ICM20649_SHIFT_ODR_ALIGN_EN						0
#define ICM20649_MASK_ODR_ALIGN_EN						BIT(0)

#define ICM20649_REG_ACCEL_SMPLRT_DIV_1					0x10
#define ICM20649_SHIFT_ACCEL_SMPLRT_DIV_1				0
#define ICM20649_MASK_ACCEL_SMPLRT_DIV_1				(BIT(3) | BIT(2) | BIT(1) | BIT(0))

#define ICM20649_REG_ACCEL_SMPLRT_DIV_2					0x11

#define ICM20649_REG_ACCEL_INTL_CTRL							0x12
#define ICM20649_SHIFT_ACCEL_INTL_CTRL_ACCEL_INTEL_EN			1
#define ICM20649_MASK_ACCEL_INTL_CTRL_ACCEL_INTEL_EN			BIT(1)
#define ICM20649_SHIFT_ACCEL_INTL_CTRL_ACCEL_INTEL_MODE_INT		0
#define ICM20649_MASK_ACCEL_INTL_CTRL_ACCEL_INTEL_MODE_INT		BIT(0)

#define ICM20649_REG_WOM_THR							0x13

#define ICM20649_REG_ACCEL_CONFIG						0x14
#define ICM20649_SHIFT_ACCEL_CONFIG_ACCEL_DLPFCFG		3
#define ICM20649_MASK_ACCEL_CONFIG_ACCEL_DLPFCFG		(BIT(5) | BIT(4) | BIT(3))
#define ICM20649_SHIFT_ACCEL_CONFIG_ACCEL_FS_SEL		1
#define ICM20649_MASK_ACCEL_CONFIG_ACCEL_FS_SEL			(BIT(2) | BIT(1))
#define ICM20649_SHIFT_ACCEL_CONFIG_ACCEL_FCHOICE		0
#define ICM20649_MASK_ACCEL_CONFIG_ACCEL_FCHOICE		BIT(0)

#define ICM20649_REG_ACCEL_CONFIG_2						0x15
#define ICM20649_SHIFT_ACCEL_CONFIG_2_AX_ST_EN_REG		4
#define ICM20649_MASK_ACCEL_CONFIG_2_AX_ST_EN_REG		BIT(4)
#define ICM20649_SHIFT_ACCEL_CONFIG_2_AY_ST_EN_REG		3
#define ICM20649_MASK_ACCEL_CONFIG_2_AY_ST_EN_REG		BIT(3)
#define ICM20649_SHIFT_ACCEL_CONFIG_2_AZ_ST_EN_REG		2
#define ICM20649_MASK_ACCEL_CONFIG_2_AZ_ST_EN_REG		BIT(2)
#define ICM20649_SHIFT_ACCEL_CONFIG_2_DEC3_CFG			0
#define ICM20649_MASK_ACCEL_CONFIG_2_DEC3_CFG			(BIT(1) | BIT(0))

#define ICM20649_REG_FSYNC_CONFIG						0x52
#define ICM20649_SHIFT_FSYNC_CONFIG_DELAY_TIME_EN		7
#define ICM20649_MASK_FSYNC_CONFIG_DELAY_TIME_EN		BIT(7)
#define ICM20649_SHIFT_FSYNC_CONFIG_WOM_DEGLITCH_EN		5
#define ICM20649_MASK_FSYNC_CONFIG_WOM_DEGLITCH_EN		BIT(5)
#define ICM20649_SHIFT_FSYNC_CONFIG_WOM_EDGE_INT		4
#define ICM20649_MASK_FSYNC_CONFIG_WOM_EDGE_INT			BIT(4)
#define ICM20649_SHIFT_FSYNC_CONFIG_EXT_SYNC_SET		0
#define ICM20649_MASK_FSYNC_CONFIG_EXT_SYNC_SET			(BIT(3) | BIT(2) | BIT(1) | BIT(0))

#define ICM20649_REG_TEMP_CONFIG						0x53
#define ICM20649_SHIFT_TEMP_CONFIG_TEMP_DLPFCFG			0
#define ICM20649_MASK_TEMP_CONFIG_TEMP_DLPFCFG			(BIT(2) | BIT(1) | BIT(0))

#define ICM20649_REG_MOD_CTRL_USR						0x54
#define ICM20649_SHIFT_MOD_CTRL_USR_REG_LP_DMP_EN		0
#define ICM20649_MASK_MOD_CTRL_USR_REG_LP_DMP_EN		BIT(0)

#ifndef CONFIG_ICM20649_ACCEL_SAMPLE_RATE_DIV
	#define ICM20649_DEFAULT_ACCEL_SAMPLE_RATE_DIV 0
#else
	#define ICM20649_DEFAULT_ACCEL_SAMPLE_RATE_DIV CONFIG_ICM20649_ACCEL_SAMPLE_RATE_DIV
#endif

#define ICM20649_DEFAULT_ACCEL_DECIMATOR 0
#define ICM20649_DEFAULT_ACCEL_LPF_ENABLE 1
#define ICM20649_DEFAULT_ACCEL_LPF_CFG 7

#if CONFIG_ICM20649_ACCEL_FS == 0
	#define ICM20649_ACCEL_FS_RUNTIME 1
	#define ICM20649_DEFAULT_ACCEL_FULLSCALE		3
#elif CONFIG_ICM20649_ACCEL_FS == 4
	#define ICM20649_DEFAULT_ACCEL_FULLSCALE		0
#elif CONFIG_ICM20649_ACCEL_FS == 8
	#define ICM20649_DEFAULT_ACCEL_FULLSCALE		1
#elif CONFIG_ICM20649_ACCEL_FS == 16 
	#define ICM20649_DEFAULT_ACCEL_FULLSCALE		2
#elif CONFIG_ICM20649_ACCEL_FS == 30
	#define ICM20649_DEFAULT_ACCEL_FULLSCALE		3
#endif

#ifndef CONFIG_ICM20649_GYRO_SAMPLE_RATE_DIV
	#define ICM20649_DEFAULT_GYRO_SAMPLE_RATE_DIV 0
#else
	#define ICM20649_DEFAULT_GYRO_SAMPLE_RATE_DIV CONFIG_ICM20649_ACCEL_SAMPLE_RATE_DIV
#endif

#define ICM20649_DEFAULT_GYRO_DECIMATOR 0
#define ICM20649_DEFAULT_GYRO_LPF_ENABLE 1
#define ICM20649_DEFAULT_GYRO_LPF_CFG 7

#if CONFIG_ICM20649_GYRO_FS == 0
	#define ICM20649_GYRO_FS_RUNTIME 1
	#define ICM20649_DEFAULT_GYRO_FULLSCALE		3
#elif CONFIG_ICM20649_GYRO_FS == 500
	#define ICM20649_DEFAULT_GYRO_FULLSCALE		0
#elif CONFIG_ICM20649_GYRO_FS == 1000
	#define ICM20649_DEFAULT_GYRO_FULLSCALE		1
#elif CONFIG_ICM20649_GYRO_FS == 2000
	#define ICM20649_DEFAULT_GYRO_FULLSCALE		2
#elif CONFIG_ICM20649_GYRO_FS == 4000
	#define ICM20649_DEFAULT_GYRO_FULLSCALE		3
#endif

#define ICM20649_SPI_READ BIT(7)

struct icm20649_config {
	char *dev_name;
};

struct icm20649_data {
    struct device *spi;
    s16_t accel_sample_x;
    s16_t accel_sample_y;
    s16_t accel_sample_z;

    s16_t temp_sample;

    s16_t gyro_sample_x;
    s16_t gyro_sample_y;
    s16_t gyro_sample_z;

#ifdef CONFIG_ICM20649_TRIGGER
	struct device *gpio;
	struct gpio_callback gpio_cb;

	struct sensor_trigger data_ready_trigger;
	sensor_trigger_handler_t data_ready_handler;

#if defined(CONFIG_ICM20649_TRIGGER_OWN_THREAD)
	K_THREAD_STACK_MEMBER(thread_stack, CONFIG_ICM20649_THREAD_STACK_SIZE);
	struct k_thread thread;
	struct k_sem gpio_sem;
#elif defined(CONFIG_ICM20649_TRIGGER_GLOBAL_THREAD)
	struct k_work work;
	struct device *dev;
#endif

#endif /* CONFIG_ICM20649_TRIGGER */
};

#ifdef CONFIG_ICM20649_TRIGGER
int icm20649_trigger_set(struct device *dev,
			const struct sensor_trigger *trig,
			sensor_trigger_handler_t handler);

int icm20649_init_interrupt(struct device *dev);
#endif

int icm20649_get_who_am_i(struct device *dev, u8_t *whoami);
typedef void(*icm20649_fifo_stream_cb)(s16_t *samples);
void icm20649_fifo_stream(struct device *dev, icm20649_fifo_stream_cb stream_cb);
int icm20649_fifo_count(struct device *dev, u16_t *cnt);
u16_t icm20649_fifo_read(struct device *dev, u8_t *buf, u16_t len);
int icm20649_fifo_overflow_int_status(struct device *dev, u8_t *reg);
int icm20649_fifo_watermark_int_status(struct device *dev, u8_t *reg);

enum icm20649_int_state {
	ICM20649_WOM_INT,
	ICM20649_FIFO_INT
};

//int icm20649_set_state(struct device *dev);


#define SYS_LOG_DOMAIN "ICM20649"
#define SYS_LOG_LEVEL CONFIG_SYS_LOG_SENSOR_LEVEL
#include <logging/sys_log.h>
#endif /* __SENSOR_ICM20649_H__ */
